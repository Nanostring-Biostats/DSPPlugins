vertex.label.cex = 0.5  * is.element(names(V(gr)), names(et)[et == cid]))
0.5 * is.element(names(V(gr)), names(et)[et == cid])
V(grtemp)
grtemp = gr
V(grtemp)
str(V(grtemp))
set_vertex_attr(grtemp, "size", value = 0.5 * is.element(names(V(gr)), names(et)[et == cid]))
plot(gr, vertex.size = .1 + 0.3 * is.element(names(V(gr)), names(et)[et == cid]))
set_vertex_attr(grtemp, "label.cex", value = 0.5 * is.element(names(V(gr)), names(et)[et == cid]))
plot(gr, vertex.size = .1 + 0.3 * is.element(names(V(gr)), names(et)[et == cid]))
plot(gr, names(et)[et == cid]),
vertex.label.cex = 0)
plot(gr,        vertex.label.cex = 0)
grtemp = set_vertex_attr(grtemp, "label.cex", value = 0.5 * is.element(names(V(gr)), names(et)[et == cid]))
plot(grtemp, vertex.label.cex = 0)
dev.off()
grtemp = set_vertex_attr(grtemp, "label.cex", value = 0.5 * is.element(names(V(gr)), names(et)[et == cid]))
plot(grtemp, vertex.label.cex = 0)
grtemp = set_vertex_attr(gr, "label.cex", value = 0.5 * is.element(names(V(gr)), names(et)[et == cid]))
plot(grtemp, vertex.label.cex = 0)
grtemp = set_vertex_attr(gr, "size", value = 0.01 + 0.5 * is.element(names(V(gr)), names(et)[et == cid]))
plot(grtemp, vertex.label.cex = 0)
grtemp = set_vertex_attr(gr, "size", value = 0.01 + 2 * is.element(names(V(gr)), names(et)[et == cid]))
plot(grtemp, vertex.label.cex = 0)
grtemp = set_vertex_attr(gr, "size", value = 0.01 + 7 * is.element(names(V(gr)), names(et)[et == cid]))
plot(grtemp, vertex.label.cex = 0)
?set_vertex_attr
vertex_attr_names(graph)
vertex_attr_names(grtemp)
names(V(grtemp))
grtemp = set_vertex_attr(grtemp, "name",
value = replace(names(V(grtemp)), !is.element(names(V(gr)), names(et)[et == cid]), ""))
plot(grtemp, vertex.label.cex = 0)
plot(grtemp, vertex.label.cex = 0.4)
plot(grtemp, vertex.label.cex = 1)
set.seed(0)
plot(grtemp, vertex.label.cex = 1)
set.seed(0)
plot(grtemp, vertex.label.cex = 1)
# show in umap space
pdf("dbl umaps by cluster.pdf", width = 8, height = 8)
for (cid in unique(et)) {
col = c(alpha("darkblue", 0.3), alpha("red", 0.8))[1 + is.element(rownames(eu$layout), names(et)[et == cid])]
par(mfrow = c(2,2))
plot(eu$layout, pch = 16, main = "Expression space", col = col)
legend("top", paste0("expression clust ", cid))
plot(bu$layout, pch = 16, main = "Knowledge space", col = col)
plot(tu, pch = 16, main = "Knowledge space", col = col)
grtemp = set_vertex_attr(gr, "size", value = 0.01 + 7 * is.element(names(V(gr)), names(et)[et == cid]))
grtemp = set_vertex_attr(grtemp, "name",
value = replace(names(V(grtemp)), !is.element(names(V(gr)), names(et)[et == cid]), ""))
set.seed(0)
plot(grtemp, vertex.label.cex = 1)
#, vertex.size = .1 + 0.3 * is.element(names(V(gr)),
#  vertex.label.cex = 0.5 * is.element(names(V(gr)), names(et)[et == cid]))
}
dev.off()
plot(grtemp, vertex.label.cex = 1)
plot(grtemp, vertex.label.cex = 1, vertex.label.col = alpha("darkblue", 0.3))
plot(grtemp, vertex.label.cex = 1, vertex.label.col = alpha("darkblue", 0.3),
edge.cex = 0.5)
set.seed(0)
plot(grtemp, vertex.label.cex = 1, vertex.label.col = alpha("darkblue", 0.3),
edge.cex = 0.5)
grtemp = set_vertex_attr(gr, "size", value = 0.1 + 7 * is.element(names(V(gr)), names(et)[et == cid]))
plot(grtemp, vertex.label.cex = 1, vertex.label.col = alpha("darkblue", 0.3),
edge.color = alpha("grey", 0.3)
#, vertex.size = .1 + 0.3 * is.element(names(V(gr)),
#  vertex.label.cex = 0.5 * is.element(names(V(gr)), names(et)[et == cid]))
}
dev.off()
# look at a single bio gene set:
sort(et[names(bt[bt==13])])
# and a single expression cluster:
sort(bt[names(et[et==7])])
# shows that very similar genes aren't getting clustered together with hclust on biodist.
# confusogram (network) of bio distances of genes in an expression cluster:
tempgenes = names(et[et==7])
pheatmap(as.matrix(bdist)[tempgenes, tempgenes])
plot(grtemp, vertex.label.cex = 1, vertex.label.col = alpha("darkblue", 0.3),
edge.color = alpha("grey", 0.3))
dev.off()
dev.off()
set.seed(0)
plot(grtemp, vertex.label.cex = 1, vertex.label.col = alpha("darkblue", 0.3),
edge.color = alpha("grey", 0.3))
grtemp = set_vertex_attr(gr, "size", value = 0.1 + 7 * is.element(names(V(gr)), names(et)[et == cid]))
grtemp = set_vertex_attr(grtemp, "name",
value = replace(names(V(grtemp)), !is.element(names(V(gr)), names(et)[et == cid]), ""))
set.seed(0)
plot(grtemp, vertex.label.cex = 1, vertex.label.col = alpha("darkblue", 0.3),
edge.color = alpha("grey", 0.3))
cid = 1
col = c(alpha("darkblue", 0.3), alpha("red", 0.8))[1 + is.element(rownames(eu$layout), names(et)[et == cid])]
par(mfrow = c(1,2))
par(mar = rep(0.1, 4))
plot(eu$layout, pch = 16, main = "Expression space", col = col)
legend("top", paste0("expression clust ", cid))
grtemp = set_vertex_attr(gr, "size", value = 0.1 + 7 * is.element(names(V(gr)), names(et)[et == cid]))
grtemp = set_vertex_attr(grtemp, "name",
value = replace(names(V(grtemp)), !is.element(names(V(gr)), names(et)[et == cid]), ""))
set.seed(0)
plot(grtemp, vertex.label.cex = 1, vertex.label.col = alpha("darkblue", 0.3),
edge.color = alpha("grey", 0.6))
# show in umap space
pdf("dbl umaps by cluster.pdf", width = 12, height = 7)
for (cid in unique(et)) {
if (sum(et == cid) > 1) {
col = c(alpha("darkblue", 0.3), alpha("red", 0.8))[1 + is.element(rownames(eu$layout), names(et)[et == cid])]
par(mfrow = c(1,2))
par(mar = rep(0.1, 4))
plot(eu$layout, pch = 16, main = "Expression space", col = col)
legend("top", paste0("expression clust ", cid))
#plot(bu$layout, pch = 16, main = "Knowledge space", col = col)
#plot(tu, pch = 16, main = "Knowledge space", col = col)
grtemp = set_vertex_attr(gr, "size", value = 0.1 + 7 * is.element(names(V(gr)), names(et)[et == cid]))
grtemp = set_vertex_attr(grtemp, "name",
value = replace(names(V(grtemp)), !is.element(names(V(gr)), names(et)[et == cid]), ""))
set.seed(0)
plot(grtemp, vertex.label.cex = 1, vertex.label.col = alpha("darkblue", 0.3),
edge.color = alpha("grey", 0.6))
#, vertex.size = .1 + 0.3 * is.element(names(V(gr)),
#  vertex.label.cex = 0.5 * is.element(names(V(gr)), names(et)[et == cid]))
}
}
dev.off()
names(list())
intersect(names(list()), 1:2)
union(names(list()), 1:2)
?pheatmap
head(pheatmap)
library(SpatialDecon)
head(TIL_barplot())
head(TIL_barplot)
TIL_barplot()
TIL_barplot
temp = readChar(fileName, file.info("parse STRING.R")$size)
temp = readChar("parse STRING.R", file.info("parse STRING.R")$size)
str(temp)
head(temp)
temp
cat(temp, temp)
setwd("~/plugins/build decon plugin")
getwd()
sdecondir = "C:\\Users\\pdanaher\\Documents\\Extensions\\SpatialDecon\\R"
dir(sdecondir)
name = dir(sdecondir)[1]
fname = paste0(sdecondir, "/", name)
fname
temp = readChar(fname, file.info(fname)$size)
cat(temp)
# empty text:
zz = ""
#### copy main() function (includes arguments):
temp = readChar("main.R", file.info("main.R")$size)
zz = cat(zz, temp)
zz
?cat
cat(list(temp, temp))
cat(unlist(list(temp, temp)))
# empty text:
zz = list()
#### copy main() function (includes arguments):
temp = readChar("main.R", file.info("main.R")$size)
zz[[length(zz) + 1]] = temp
sdecondir = "C:\\Users\\pdanaher\\Documents\\Extensions\\SpatialDecon\\R"
for (name in dir(sdecondir)) {
fname = paste0(sdecondir, "/", name)
temp = readChar(fname, file.info(fname)$size)
zz[[length(zz) + 1]] = temp
}
str(zz)
zz[[1]]
zz[[12]]
str(zz)
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
getwd()
zz[[1]]
cat(zz[[1]])
cat(unlist(zz[[1]]))
cat(zz[[1]], file = "SpatialDecon_plugin.R")
?cat
cat("", file = "SpatialDecon_plugin.R")
for (z in 1:length(zz)) {
cat(zz[[i]], file = "SpatialDecon_plugin.R", append = T)
}
cat("", file = "SpatialDecon_plugin.R")
for (i in 1:length(zz)) {
cat(zz[[i]], file = "SpatialDecon_plugin.R", append = T)
}
cat(temp)
cat("", file = "SpatialDecon_plugin.R")
for (i in 1:length(zz)) {
cat(zz[[i]], file = "SpatialDecon_plugin.R", append = T, sep = "")
}
cat("", file = "SpatialDecon_plugin.txt")
for (i in 1:length(zz)) {
cat(zz[[i]], file = "SpatialDecon_plugin.txt", append = T, sep = "")
}
cat("", file = "SpatialDecon_plugin.txt")
for (i in 1:length(zz)) {
cat(zz[[i]], file = "SpatialDecon_plugin.txt", append = T, sep = "\n")
}
temp
temp = gsub("# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n# Copyright (C) 2020, NanoString Technologies, Inc.\r\n#    This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n#    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n#    You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n# Contact us:\r\n# NanoString Technologies, Inc.\r\n# 530 Fairview Avenue N\r\n# Seattle, WA 98109\r\n# Tel: (888) 358-6266\r\n# pdanaher@nanostring.com",
"",
temp)
temp
cat(temp)
temp = scan(fname)
temp = scan(fname, comment.char = NA)
temp = scan(fname, comment.char = "")
temp = scan(fname, comment.char = F)
temp = scan(fname, comment.char = NA)
temp = scan(fname, comment.char = "NA")
temp = scan(fname, comment.char = "$&^%*")
temp = scan(fname, comment.char = "")
?readChar
cat(temp)
temp
temp = gsub("\r\n ", " ", temp)
sdecondir = "C:\\Users\\pdanaher\\Documents\\Extensions\\SpatialDecon\\R"
for (name in dir(sdecondir)) {
fname = paste0(sdecondir, "/", name)
temp = readChar(fname, file.info(fname)$size)
temp = gsub("# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n# Copyright (C) 2020, NanoString Technologies, Inc.\r\n#    This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n#    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n#    You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n# Contact us:\r\n# NanoString Technologies, Inc.\r\n# 530 Fairview Avenue N\r\n# Seattle, WA 98109\r\n# Tel: (888) 358-6266\r\n# pdanaher@nanostring.com",
"",
temp)
temp = gsub("\r\n ", " ", temp)
zz[[length(zz) + 1]] = temp
}
cat("", file = "SpatialDecon_plugin.txt")
for (i in 1:length(zz)) {
cat(zz[[i]], file = "SpatialDecon_plugin.txt", append = T, sep = "\n")
}
temp
substr(temp, 1, 100)
temp = substr(temp, 1, 100)
gsub("\r\n ", " ", temp)
substr(temp, 1, 100)
temp = readChar(fname, file.info(fname)$size)
temp = substr(temp, 400, 500)
temp
temp = readChar(fname, file.info(fname)$size)
temp = substr(temp, 2400, 2500)
temp
gsub("\\r\\n ", " ", temp)
sdecondir = "C:\\Users\\pdanaher\\Documents\\Extensions\\SpatialDecon\\R"
for (name in dir(sdecondir)) {
fname = paste0(sdecondir, "/", name)
temp = readChar(fname, file.info(fname)$size)
temp = gsub("# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n# Copyright (C) 2020, NanoString Technologies, Inc.\r\n#    This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n#    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n#    You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n# Contact us:\r\n# NanoString Technologies, Inc.\r\n# 530 Fairview Avenue N\r\n# Seattle, WA 98109\r\n# Tel: (888) 358-6266\r\n# pdanaher@nanostring.com",
"",
temp)
temp = gsub("\\r\\n ", " ", temp)
zz[[length(zz) + 1]] = temp
}
cat("", file = "SpatialDecon_plugin.txt")
for (i in 1:length(zz)) {
cat(zz[[i]], file = "SpatialDecon_plugin.txt", append = T, sep = "\n")
}
gsub("\#adb", "z", "#adbasf")
gsub("\\#adb", "z", "#adbasf")
temp
temp0 = temp
gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n, "", temp0)
gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp0)
gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n
\\# Copyright (C) 2020, NanoString Technologies, Inc.\r\n
\\#    This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n
\\#    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n
\\#    You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc.\r\# 530 Fairview Avenue N\r\n
\\# Seattle, WA 98109\r\n# Tel: (888) 358-6266\r\n# pdanaher@nanostring.com",
"",
temp)
gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n\\# Copyright (C) 2020, NanoString Technologies, Inc.\r\n", "", temp0)
gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp0)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp0)
temp
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp
temp = gsub("\\# Copyright (C) 2020, NanoString Technologies, Inc.\r\n", "", temp)
temp
temp = gsub("\\# Copyright (C) 2020, NanoString Technologies, Inc\.\r\n", "", temp)
temp = gsub("\\# Copyright (C) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp
temp = gsub("\\# Copyright (C) 2020, NanoString Technologies, ", "", temp)
temp
temp = gsub("\\# Copyright \(C\) 2020, NanoString Technologies, ", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, ", "", temp)
temp
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp
temp = gsub("This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp
temp = gsub("This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp
fname = paste0(sdecondir, "/", name)
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub("This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp
temp = gsub("This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the GNU General Public License for more details\\.\r\n", "", temp)
temp
temp = gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc.\r\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\\\# Contact us:\r\n# NanoString Technologies, Inc.\r\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\\\# Contact us:\r\n# NanoString Technologies, Inc.\r\\\# 530 Fairview Avenue N\r\n", "", temp)
gsub("You should have received a copy of the GNU General Public License along with this program.  ", "", temp)
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\#", "", temp)
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# Nano", "", temp)
temp = gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\# 530 Fairview Avenue N\r\n", "", temp)
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\# 530 Fairview Avenue N\r\n", "", temp)
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\", "", temp)
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r", "", temp)
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\# 530", "", temp)
temp = gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\\\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\\# 530 Fairview Avenue N\r\n", "", temp)
temp
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\# 53
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\ \\# 53
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\ \\# 53", "", temp)
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\", "", temp)
gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r", "", temp)
temp
temp = gsub("# 530 Fairview Avenue N\r\n", "", temp)
temp
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub("This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp = gsub("This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the GNU General Public License for more details\\.\r\n", "", temp)
temp = gsub("You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r", "", temp)
temp = gsub("# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("\\# Seattle, WA 98109\r\n", "", temp)
temp = gsub("\\# Tel: (888) 358-6266\r\n", "", temp)
temp = gsub("\\# pdanaher@nanostring.com", "", temp)
temp
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub("\\# This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp = gsub("\\# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the GNU General Public License for more details\\.\r\n", "", temp)
temp = gsub("\\# You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r", "", temp)
temp = gsub("\\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("\\# Seattle, WA 98109\r\n", "", temp)
temp = gsub("\\# Tel: (888) 358-6266\r\n", "", temp)
temp = gsub("\\# pdanaher@nanostring.com", "", temp)
temp
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub(" This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp = gsub(" This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the GNU General Public License for more details\\.\r\n", "", temp)
temp = gsub("\\# You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r", "", temp)
temp = gsub("\\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("\\# Seattle, WA 98109\r\n", "", temp)
temp = gsub("\\# Tel: (888) 358-6266\r\n", "", temp)
temp = gsub("\\# pdanaher@nanostring.com", "", temp)
temp
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub(" This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp = gsub(" This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the GNU General Public License for more details\\.\r\n", "", temp)
temp = gsub(" You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r", "", temp)
temp = gsub("\\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("\\# Seattle, WA 98109\r\n", "", temp)
temp = gsub("\\# Tel: (888) 358-6266\r\n", "", temp)
temp = gsub("\\# pdanaher@nanostring.com", "", temp)
temp
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub(" This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp = gsub(" This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the GNU General Public License for more details\\.\r\n", "", temp)
temp = gsub(" You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r", "", temp)
temp = gsub("\\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("\\# Seattle, WA 98109\r\n", "", temp)
temp = gsub("Tel: (888) 358-6266\r\n", "", temp)
temp = gsub("\\# pdanaher@nanostring.com", "", temp)
temp
temp = gsub("Tel: (888) 358-6266\r\n", "", temp)
temp
temp = gsub("Tel\\: (888) 358-6266\r\n", "", temp)
temp
temp = gsub("Tel\: (888) 358-6266\r\n", "", temp)
temp = gsub("Tel: (888) 358-6266\r\n", "", temp)
temp
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub(" This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp = gsub(" This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the GNU General Public License for more details\\.\r\n", "", temp)
temp = gsub(" You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r", "", temp)
temp = gsub("\\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("\\# Seattle, WA 98109\r\n", "", temp)
temp = gsub("Tel: (888) 358-6266\r\n", "", temp)
temp = gsub("\\# pdanaher@nanostring.com", "", temp)
temp
gsub("Tel: (888) 358-6266\r\n", "", temp)
gsub("Tel: (888) 358\-6266\r\n", "", temp)
gsub("Tel: (888) 358\\-6266\r\n", "", temp)
temp = gsub("Tel: \\(888\\) 358-6266\r\n", "", temp)
temp
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub(" This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp = gsub(" This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the GNU General Public License for more details\\.\r\n", "", temp)
temp = gsub(" You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub("\\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("\\# Seattle, WA 98109\r\n", "", temp)
temp = gsub("Tel: \\(888\\) 358-6266\r\n", "", temp)
temp = gsub("\\# pdanaher@nanostring.com", "", temp)
temp
temp = readChar(fname, file.info(fname)$size)
temp
temp = readChar(fname, file.info(fname)$size)
temp = gsub("\\# SpatialDecon: mixed cell deconvolution for spatial and/or bulk gene expression data\r\n", "", temp)
temp = gsub("\\# Copyright \\(C\\) 2020, NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub("\\#    This program is free software\\: you can redistribute it and\\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or \\(at your option\\) any later version\\.\r\n", "", temp)
temp = gsub("\\#    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the GNU General Public License for more details\\.\r\n", "", temp)
temp = gsub("\\#    You should have received a copy of the GNU General Public License along with this program.  If not, see https://www.gnu.org/licenses/.\r\n\\# Contact us:\r\n# NanoString Technologies, Inc\\.\r\n", "", temp)
temp = gsub("\\# 530 Fairview Avenue N\r\n", "", temp)
temp = gsub("\\# Seattle, WA 98109\r\n", "", temp)
temp = gsub("\\# Tel: \\(888\\) 358-6266\r\n", "", temp)
temp = gsub("\\# pdanaher@nanostring.com", "", temp)
te,[]
temp
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
write.csv(safeTME, file = "safeTME-for-tumor-immune.csv", row.names = 1)
write.csv(safeTME, file = "safeTME-for-tumor-immune.csv")
source("test spatialdecon plugin.R")
source("test spatialdecon plugin.txt")
source("SpatialDecon_plugin.txt")
source("SpatialDecon_plugin.R")
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
source("SpatialDecon_plugin.txt")
setwd("~/plugins/build decon plugin")
rm(list = ls())
source("SpatialDecon_plugin.txt")
# load test data:
load("save Rdata result - 2020-05-04 18_14_53.79 export.RData")
outputFolder
# run it:
main(dataset = dataset, segmentAnnotations = segmentAnnotations, targetAnnotations = targetAnnotations, outputFolder = "testresults")
dataset[1:5,1:5]
str(dataset)
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
source('~/plugins/build decon plugin/test spatialdecon plugin.R', echo=TRUE)
#### preliminaries ----------------------
dataset = as.matrix(dataset)
# access cell profile matrix file:
X = as.matrix(read.csv(cell_profile_filename, header = T, row.names = 1))
# parse merges:
merges.full = NULL
if (length(merges) > 0) {
# initialize with 1:1 mapping:
merges.full = list()
for (name in colnames(X)) {
merges.full[[name]] = name
}
# add merges:
for (name in names(merges0)) {
# remove entries for cells specified by user and replace with their entries:
merges.full[merges[[name]]] = NULL
merges.full[[name]] = merges[[name]]
}
}
# parse nuclei column
cell_counts = NULL
if (is.element(nuclei_count_column_name, colnames(targetAnnotations))) {
cell_counts = as.numeric(targetAnnotations[, nuclei_count_column_name])
}
if (!is.element(nuclei_count_column_name, colnames(targetAnnotations))) {
warning("The value entered for nuclei_count_column_name was not a column header in the target annotations.
Results will not be output on the scale of cell counts; just in abundance scores and proportions.")
}
# parse pure tumor column
is_pure_tumor = NULL
if (is.element(pure_tumor_column_name, colnames(targetAnnotations))) {
is_pure_tumor = targetAnnotations[, pure_tumor_column_name] == "tumor"
is_pure_tumor = replace(is_pure_tumor, is.na(is_pure_tumor), FALSE)
}
pure_tumor_column_name
if (!is.element(pure_tumor_column_name, colnames(targetAnnotations)) & (pure_tumor_column_name != "none")) {
warning("The value entered for pure_tumor_column_name was not a column header in the target annotations.")
}
# format data for spatialdecon:
norm = dataset[targetAnnotations$TargetName, segmentAnnotations$segmentID]
targetAnnotations$TargetName
# format data for spatialdecon:
norm = dataset[targetAnnotations$TargetGUID, segmentAnnotations$segmentID]
rownames(norm) = targetAnnotations$TargetName
colnames(norm) = segmentAnnotations$segmentDisplayName
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
source('~/plugins/build decon plugin/test spatialdecon plugin.R', echo=TRUE)
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
source('~/plugins/build decon plugin/test spatialdecon plugin.R', echo=TRUE)
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
source('~/plugins/build decon plugin/test spatialdecon plugin.R', echo=TRUE)
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
source('~/plugins/build decon plugin/test spatialdecon plugin.R', echo=TRUE)
reverseDecon
?reverseDecon
source('~/plugins/build decon plugin/build spatialdecon plugin.R', echo=TRUE)
source('~/plugins/build decon plugin/test spatialdecon plugin.R', echo=TRUE)
